$date
	Thu Oct 23 10:48:41 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! z $end
$var wire 8 " result [7:0] $end
$var wire 1 # ovf $end
$var wire 1 $ neg $end
$var wire 1 % cf $end
$var reg 8 & a [7:0] $end
$var reg 1 ' areset $end
$var reg 8 ( b [7:0] $end
$var reg 3 ) op [2:0] $end
$scope module DUT $end
$var wire 8 * a [7:0] $end
$var wire 1 ' areset $end
$var wire 8 + b [7:0] $end
$var wire 3 , op [2:0] $end
$var wire 1 ! z $end
$var wire 8 - sub_res [7:0] $end
$var wire 1 $ neg $end
$var wire 8 . add_res [7:0] $end
$var parameter 32 / ADDS $end
$var parameter 32 0 ADDU $end
$var parameter 32 1 AND $end
$var parameter 32 2 OR $end
$var parameter 32 3 SLL $end
$var parameter 32 4 SUBS $end
$var parameter 32 5 SUBU $end
$var parameter 32 6 XOR $end
$var reg 1 % cf $end
$var reg 1 # ovf $end
$var reg 8 7 result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 6
b1 5
b11 4
b111 3
b101 2
b100 1
b0 0
b10 /
$end
#0
$dumpvars
b0 7
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
b0 &
0%
0$
0#
b0 "
1!
$end
#12
0'
#22
0!
b10011 "
b10011 7
b111 (
b111 +
b10011 .
b101 -
b1100 &
b1100 *
#32
1%
1!
b0 "
b0 7
b1 (
b1 +
b0 .
b11111110 -
b11111111 &
b11111111 *
#42
0!
b1000110 "
b1000110 7
1%
b110010 (
b110010 +
b10101010 .
b1000110 -
b1111000 &
b1111000 *
b1 )
b1 ,
#52
1$
0%
0!
b10111010 "
b10111010 7
b1111000 (
b1111000 +
b10101010 .
b10111010 -
b110010 &
b110010 *
#62
1#
0!
b10000000 "
b10000000 7
b1 (
b1 +
b10000000 .
b1111110 -
b1111111 &
b1111111 *
b10 )
b10 ,
#72
0#
0!
b11100111 "
b11100111 7
b11110010 (
b11110010 +
b11100111 .
b11 -
b11110101 &
b11110101 *
#82
0$
1#
0!
b111000 "
b111000 7
b1100100 (
b1100100 +
b0 .
b111000 -
b10011100 &
b10011100 *
b11 )
b11 ,
#92
1$
0#
0!
b11001011 "
b11001011 7
b1010 (
b1010 +
b11011111 .
b11001011 -
b11010101 &
b11010101 *
#102
0$
0!
b10011 "
b10011 7
b1010111 (
b1010111 +
b11110010 .
b1000100 -
b10011011 &
b10011011 *
b100 )
b100 ,
#112
1$
0!
b11011111 "
b11011111 7
b101 )
b101 ,
#122
0!
b11001100 "
b11001100 7
b110 )
b110 ,
#132
1%
0!
b11100000 "
b11100000 7
b11111111 (
b11111111 +
b11101111 .
b11110001 -
b11110000 &
b11110000 *
b111 )
b111 ,
#152
